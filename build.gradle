buildscript {
    ext.versions = [
            exposed          : '0.11.2',
            flyway           : '5.2.1',
            kotlin           : '1.3.10',
            ktor             : '1.0.0',
            jackson          : '2.9.+',
            junit            : '5.1.+',
            jvm              :  1.8,
            logback          : '1.2.+',
            postgres         : '42.2.5',
            postgresContainer: '1.10.1'
    ]

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}"
    }
}

plugins {
    id "org.jetbrains.kotlin.jvm" version "1.3.10"
    id "application"
}

group 'us.kesslern'
version '1.0-SNAPSHOT'

sourceCompatibility = versions.jvvm
compileKotlin {
    kotlinOptions.jvmTarget = "${versions.jvm}"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "${versions.jvm}"
}

repositories {
    jcenter()
    maven { url "https://dl.bintray.com/kotlin/ktor" }
}

dependencies {
    compile "ch.qos.logback:logback-classic:$versions.logback"
    compile "com.fasterxml.jackson.module:jackson-module-kotlin:$versions.jackson"
    compile "io.ktor:ktor-jackson:$versions.ktor"
    compile "io.ktor:ktor-server-netty:$versions.ktor"
    compile "org.flywaydb:flyway-core:$versions.flyway"
    compile "org.jetbrains.exposed:exposed:$versions.exposed"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$versions.kotlin"
    compile "org.postgresql:postgresql:$versions.postgres"

    testCompile "org.testcontainers:postgresql:$versions.postgresContainer"
    testCompile "org.junit.jupiter:junit-jupiter-api:$versions.junit"
    testCompile "io.ktor:ktor-server-test-host:$versions.ktor"
}

mainClassName = 'us.kesslern.ascient.MainKt'

def databaseConnection =
        System.getProperty(
                'database.connection',
                'jdbc:postgresql://localhost:5432/postgres')

def databaseUsername = System.getProperty('database.username', 'user')
def databasePassword = System.getProperty('database.password', 'pass')

applicationDefaultJvmArgs = [
        "-Ddatabase.connection=${databaseConnection}",
        "-Ddatabase.username=${databaseUsername}",
        "-Ddatabase.password=${databasePassword}"

]

jar {
    archiveName = 'ascient.jar'

    manifest {
        attributes 'Main-Class': mainClassName
    }

    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}
